<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-TW"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://0.0.0.0:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/blog/" rel="alternate" type="text/html" hreflang="zh-TW" /><updated>2021-10-11T11:48:00+08:00</updated><id>http://0.0.0.0:4000/blog/feed.xml</id><title type="html">GWFrank’s Blog</title><subtitle>I might write things about programming, yugioh, and fingerstyle guitar.
</subtitle><author><name>GWFrank</name><email>frankkuo@protonmail.com</email></author><entry><title type="html">筆電上使用Linux的兩個工具 - Howdy &amp;amp; Touchégg</title><link href="http://0.0.0.0:4000/blog/2021/08/23/linux-on-laptop.html" rel="alternate" type="text/html" title="筆電上使用Linux的兩個工具 - Howdy &amp;amp; Touchégg" /><published>2021-08-23T00:00:00+08:00</published><updated>2021-08-23T00:00:00+08:00</updated><id>http://0.0.0.0:4000/blog/2021/08/23/linux-on-laptop</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2021/08/23/linux-on-laptop.html">&lt;h2 id=&quot;tldr&quot;&gt;TLDR&lt;/h2&gt;

&lt;p&gt;這篇文章會記錄幾個我在筆電上使用 Linux 時找到的一些工具，這些工具大多是補足一些 Windows 上不須額外設定就有，但 Linux 上需要自己去找的功能。&lt;/p&gt;

&lt;h2 id=&quot;臉部辨識解鎖---howdy&quot;&gt;臉部辨識解鎖 - Howdy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/boltgolt/howdy&quot;&gt;GitHub - boltgolt/howdy: 🛡️ Windows Hello™ style facial authentication for Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Howdy 是一個提供臉部辨識驗證的工具，可以用在登入、解鎖、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt;等等。&lt;/p&gt;

&lt;h3 id=&quot;安裝及設定&quot;&gt;安裝及設定&lt;/h3&gt;

&lt;p&gt;安裝步驟請參考 Github repo 裡面的 README。在等待安裝時，先用這個指令確定你要用的紅外線鏡頭是哪一個：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;v4l2-ctl &lt;span class=&quot;nt&quot;&gt;--list-devices&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在輸出裡裝置可能有兩個或四個 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/video*&lt;/code&gt; ，大多數的情況下選擇第一個 (或是第三個，如果有的話) 會是對的。&lt;/p&gt;

&lt;p&gt;安裝完成後先用這個指令設定 howdy：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;howdy config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在設定檔裡找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;device_path&lt;/code&gt;，並把它設為剛才找到的路徑。另外一個可以調整的參數是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dark_threshold&lt;/code&gt;，如果常常無法辨識成功的話，可以先把這個值提高。做好設定後先測試攝影機能不能正確運作：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;howdy &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;確認能在跳出的視窗中看到自己的臉後，開始為你的使用者加入臉部模型：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;howdy add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果是用 Ubuntu 的話到這裡就可以直接使用 howdy 了。 Arch 和 Manjaro 則需要編輯一些 pam 的設定檔，詳細步驟可以參考這個 &lt;a href=&quot;https://gist.github.com/pastleo/76597c6ae8f95bb02982fea6df3a3ade&quot;&gt;Setup face recognition authentication on ArchLinux and KDE Plasma using howdy · GitHub&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;其他事項&quot;&gt;其他事項&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;非紅外線的鏡頭也是可以使用 howdy ，不過有紅外線鏡頭的話還是用紅外線比較好。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gnome keyring 、 kdewallet 在登入時可能沒辦法一起解鎖，不安全的解法是直接把這兩個的密碼拿掉，風險請自行評估。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在 SDDM (KDE預設的DM) 用 howdy 滿可能會有問題，我自己是換成用 LightDM 。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如同 README 裡作者於最後所說， howdy 並沒有比密碼安全，也不會變得比密碼安全。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;觸控板手勢---touchégg&quot;&gt;觸控板手勢 - Touchégg&lt;/h2&gt;</content><author><name>GWFrank</name><email>frankkuo@protonmail.com</email></author><category term="linux" /><summary type="html">TLDR 這篇文章會記錄幾個我在筆電上使用 Linux 時找到的一些工具，這些工具大多是補足一些 Windows 上不須額外設定就有，但 Linux 上需要自己去找的功能。 臉部辨識解鎖 - Howdy GitHub - boltgolt/howdy: 🛡️ Windows Hello™ style facial authentication for Linux Howdy 是一個提供臉部辨識驗證的工具，可以用在登入、解鎖、sudo等等。 安裝及設定 安裝步驟請參考 Github repo 裡面的 README。在等待安裝時，先用這個指令確定你要用的紅外線鏡頭是哪一個： v4l2-ctl --list-devices 在輸出裡裝置可能有兩個或四個 /dev/video* ，大多數的情況下選擇第一個 (或是第三個，如果有的話) 會是對的。 安裝完成後先用這個指令設定 howdy： sudo howdy config 在設定檔裡找到 device_path，並把它設為剛才找到的路徑。另外一個可以調整的參數是 dark_threshold，如果常常無法辨識成功的話，可以先把這個值提高。做好設定後先測試攝影機能不能正確運作： sudo howdy test 確認能在跳出的視窗中看到自己的臉後，開始為你的使用者加入臉部模型： sudo howdy add 如果是用 Ubuntu 的話到這裡就可以直接使用 howdy 了。 Arch 和 Manjaro 則需要編輯一些 pam 的設定檔，詳細步驟可以參考這個 Setup face recognition authentication on ArchLinux and KDE Plasma using howdy · GitHub。 其他事項 非紅外線的鏡頭也是可以使用 howdy ，不過有紅外線鏡頭的話還是用紅外線比較好。 Gnome keyring 、 kdewallet 在登入時可能沒辦法一起解鎖，不安全的解法是直接把這兩個的密碼拿掉，風險請自行評估。 在 SDDM (KDE預設的DM) 用 howdy 滿可能會有問題，我自己是換成用 LightDM 。 如同 README 裡作者於最後所說， howdy 並沒有比密碼安全，也不會變得比密碼安全。 觸控板手勢 - Touchégg</summary></entry><entry><title type="html">學習筆記 - 網路 Overview</title><link href="http://0.0.0.0:4000/blog/2021/07/17/note-network.html" rel="alternate" type="text/html" title="學習筆記 - 網路 Overview" /><published>2021-07-17T00:00:00+08:00</published><updated>2021-07-17T00:00:00+08:00</updated><id>http://0.0.0.0:4000/blog/2021/07/17/note-network</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2021/07/17/note-network.html">&lt;h2 id=&quot;總之網路是怎麼運作的&quot;&gt;總之，網路是怎麼運作的？&lt;/h2&gt;

&lt;!--more--&gt;

&lt;p&gt;先從他的目標開始，也就是讓各個裝置能互相傳遞資料。要讓兩台電腦溝通，最 naive 的想法可能是規範某種物理接口和對應的線材，接線就能用了。但當裝置數量增加，每次都在兩台電腦間連著一條線不太實際，不如設計一個電腦是專門負責轉發這些資料，然後把所有裝置想辦法連到他就好了。&lt;/p&gt;

&lt;p&gt;Switch (aka 交換器)就是在做這件事情，他會連接許多電腦形成 LAN (Local Area Network)。這個 LAN 裡面的電腦要把封包丟給其他電腦的時候，就會丟給 switch ， switch 會看封包上寫的目的地 (接收端 MAC Address) ，根據他存的一張實體 port 和 MAC address 對應的表來轉傳。這個處理資料的層級又被稱為 Link Layer，也會被稱為 Layer 2 。而 Layer 1 則是 Physical Layer ，也就是網路線、 WiFi 的無線電波的東東。&lt;/p&gt;

&lt;h2 id=&quot;ip之類的東西又是出現在哪裡&quot;&gt;IP之類的東西又是出現在哪裡？&lt;/h2&gt;

&lt;p&gt;這個就是 Network Layer ，也就是 Layer 3 主要負責的了。這裡用來辨別裝置的東西是 IP Address ，也就是長的像是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;140.112.30.26&lt;/code&gt; 的一串數字。負責把封包轉傳到正確的 LAN 的機器叫做 router (aka 路由器)，找到一條由 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 往 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dst&lt;/code&gt; 傳遞封包的路徑的這件事情就叫做route。&lt;/p&gt;

&lt;p&gt;一台電腦通常同時會有很多的程式、服務在跑，而區別程式則是在 Transmission Layer ，也就是 Layer 4 做的。這裡是用不同的 “port” 來分，例如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; 通常是在 port 80 、 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https&lt;/code&gt; 通常在 port 443。&lt;/p&gt;

&lt;p&gt;Layer 5 是 Application Layer，有些比較細的分法 (像是 OSI Model) 會再細分。這裡的東西就比較跟應用相關，像是網頁的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; 、傳檔案的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ftp&lt;/code&gt; 、電子郵件的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smtp&lt;/code&gt; 、域名系統 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dns&lt;/code&gt;。&lt;/p&gt;</content><author><name>GWFrank</name><email>frankkuo@protonmail.com</email></author><category term="notes" /><summary type="html">總之，網路是怎麼運作的？</summary></entry><entry><title type="html">解決KDE Konsole在非整數倍縮放時的水平白色線條</title><link href="http://0.0.0.0:4000/blog/2021/03/08/konsole-glitch.html" rel="alternate" type="text/html" title="解決KDE Konsole在非整數倍縮放時的水平白色線條" /><published>2021-03-08T00:00:00+08:00</published><updated>2021-03-08T00:00:00+08:00</updated><id>http://0.0.0.0:4000/blog/2021/03/08/konsole-glitch</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2021/03/08/konsole-glitch.html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;p&gt;KDE Konsole 在使用非整數倍縮放(1.25, 1.5 etc.)時，可能會出現如下圖的異常&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/post_pics/konsole_glitch.png&quot; alt=&quot;konsole_glitch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;會有水平線條透出背後視窗的顏色&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;「編輯設定檔」→「外觀」→「雜項」→「行間距」，把行間距設為1px(有些會需要更高)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/post_pics/konsole_glitch_solution.png&quot; alt=&quot;solution&quot; /&gt;&lt;/p&gt;</content><author><name>GWFrank</name><email>frankkuo@protonmail.com</email></author><category term="linux" /><category term="solutions" /><summary type="html">Problem KDE Konsole 在使用非整數倍縮放(1.25, 1.5 etc.)時，可能會出現如下圖的異常 會有水平線條透出背後視窗的顏色 Solution 「編輯設定檔」→「外觀」→「雜項」→「行間距」，把行間距設為1px(有些會需要更高)</summary></entry><entry><title type="html">計概期末專題 黑白棋Agent</title><link href="http://0.0.0.0:4000/blog/2021/02/22/reversi-agent.html" rel="alternate" type="text/html" title="計概期末專題 黑白棋Agent" /><published>2021-02-22T00:00:00+08:00</published><updated>2021-02-22T00:00:00+08:00</updated><id>http://0.0.0.0:4000/blog/2021/02/22/reversi-agent</id><content type="html" xml:base="http://0.0.0.0:4000/blog/2021/02/22/reversi-agent.html">&lt;h2 id=&quot;tldr&quot;&gt;TLDR&lt;/h2&gt;

&lt;p&gt;今年(109-1)計概單班的期末專題(其實應該只算是一次作業？)是做一個黑白棋Agent，我和隊友用minimax + 神經網路做的evaluation實做，最後在31組中拿下第一名，對所有其他組都有超過0.5的勝率。這篇文章將會稍微紀錄一下開發的過程和一些心得及想法。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;initial-plan&quot;&gt;Initial Plan&lt;/h2&gt;

&lt;p&gt;在這次project之前我並沒有開發過類似的東西，所以完全是第一次的嘗試。一開始先隨便丟了幾個想法，然後找有沒有人做過類似的東西，找到了&lt;a href=&quot;https://reurl.cc/d5j9yV&quot;&gt;棋類AI(以五子棋為例)&lt;/a&gt;、&lt;a href=&quot;https://reurl.cc/m9j7M1&quot;&gt;電腦黑白棋&lt;/a&gt;、&lt;a href=&quot;https://reurl.cc/9XYxvn&quot;&gt;A Genetic Algorithm to Improve an Othello Program&lt;/a&gt;。這幾個都是用minimax當基底做的，到這裡我們也大概確定接下來會是做minimax，evaluation function先做最簡單的查表，再看看有什麼可以改良的。&lt;/p&gt;

&lt;h2 id=&quot;basic-minimax&quot;&gt;Basic Minimax&lt;/h2&gt;

&lt;h3 id=&quot;理論&quot;&gt;理論(?)&lt;/h3&gt;

&lt;p&gt;首先來簡單講一下minimax在做什麼。理想上，minimax會把整個遊戲樹都算好，接著從遊戲樹的底端往上，白方選擇會對白方最有利的位置下棋，黑棋則反之，一路推回去後就知道哪個位置是最佳的策略。但是因為計算時間有限，30秒內要把黑白棋全部都算完近乎不可能，我們必須要設定搜尋深度的上限。當搜尋到了上限的深度時，必須使用一個函數(evaluation function)為目前的盤面打分數來取代繼續往下搜尋。這個分數必須要能很好的反應出佔有優勢的一方，也就是(在我們的實做中)分數越高表示白棋越可能贏，分數越低表示黑棋越可能贏。&lt;/p&gt;

&lt;h3 id=&quot;實做&quot;&gt;實做&lt;/h3&gt;

&lt;p&gt;實做的第一步是刻一個找出合法下棋位置的function，這裡沒有用什麼特別的演算法來做。有測試過使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list&lt;/code&gt;紀錄合法位置的速度，最後發現是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list&lt;/code&gt;快一點點，但其實沒有顯著的影響。另外原本是用2d的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list&lt;/code&gt;當作棋盤做搜尋，後面改用1d的可以加快一些(大約多搜一層)。&lt;/p&gt;

&lt;p&gt;再來是實際刻Minimax。這部份其實是隊友刻的，照他所述他就是把wikipedia上面的psuedo code翻成python再修改一下而已。Evaluation function這時候是用在前面提到的論文內的一個表，將棋子以那張表加權後相加，計算盤面分數。&lt;/p&gt;

&lt;h2 id=&quot;improvements&quot;&gt;Improvements&lt;/h2&gt;

&lt;p&gt;最初未經改良的Minimax要在時間限制內完成比賽大概只能搜尋3層而已。用python的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cProfile&lt;/code&gt;工具，抓出搜尋合法位置的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getAvailableSpot()&lt;/code&gt;佔用不少時間，稍加優化後能多搜尋一層。&lt;/p&gt;

&lt;p&gt;另一個優化的點是使用Alpha-Beta剪枝，這個剪枝的核心思想是如果「目前這條分支的最佳可能情況」比前面已經得到的「其他分之的最佳情況」還糟的話，就不用繼續搜尋下去。這個優化又讓我們能夠多搜尋一層，搜尋5層時可以10秒完成一場比賽，搜尋6層時壓線在25秒內完成。最後的程式碼大概如下：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;minimax_adj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eval_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eval_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAvailableSpot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'inf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bestmove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# no move, proceed to other player
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;newBoard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newBoard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;bestmove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;move&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'inf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bestmove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;newBoard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeMove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newBoard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;bestmove&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;move&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bestmove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;有一個做到一半最後沒有完成的優化是Zobrist hash+查表，因為棋盤有左右、上下、旋轉對稱，有些搜尋可能會重複，利用Zobrist hash建一個棋盤盤面對應走法的hash table。或是利用TA提供的4GB空間放，先行把搜尋深度更深的結果存好，實際運行時先在資料庫中搜尋，搜尋不到時再實際跑minimax。&lt;/p&gt;

&lt;h2 id=&quot;a-neat-approach&quot;&gt;A “NEAT” Approach&lt;/h2&gt;

&lt;p&gt;在這個project的最後一週其實已經都做的差不多了，我們能對minimax做的優化都已經做了，剩下evaluation有努力的空間。我就想到之前看的Youtube頻道&lt;a href=&quot;https://www.youtube.com/c/CodeBullet/featured&quot;&gt;Code Bullet&lt;/a&gt;裡面，用神經網路+基因演算法做了很多遊戲的agent，經過一點研究後知道他是用&lt;a href=&quot;https://en.wikipedia.org/wiki/Neuroevolution_of_augmenting_topologies&quot;&gt;NEAT&lt;/a&gt;。既然我們用的是python，那應該有人已經寫好了NEAT相關的套件，於是找到了&lt;a href=&quot;https://neat-python.readthedocs.io/en/latest/&quot;&gt;neat-python&lt;/a&gt;。再來就是找看看有沒有人做了這個套件的教學，於是找到了&lt;a href=&quot;https://www.youtube.com/watch?v=MMxFDaIOHsE&amp;amp;list=PLzMcBGfZo4-lwGZWXz5Qgta_YNX3_vLS2&quot;&gt;Tech With Tim的這個系列&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;接下來就是寫一個讓兩個agent對打多場的function。為了提高效率，在這裡我用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multiprocessing&lt;/code&gt;模組達到平行運算，硬體則有系上工作站，單一系統共12個thread。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;matchup_mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agent1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balanced&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;multiprocess version of matchup()
    Args:
        agent1
        agent2
        rounds (int): how many rounds of game (each going first)

    Returns:
        tuple: ((agent1.s_depth, agent1_wins), (agent2.s_depth, agent2_wins), draws)
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;agent1_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;agent2_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# agent 1 go first as black
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agent1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;game_results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playgame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game_results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent2_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent1_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# agent 2 go first as black
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balanced&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agent2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;game_results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playgame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game_results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;agent1_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;agent2_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;agent1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent1_w&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;agent1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent2_w&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;agent1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;agent2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent2_w&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;agent2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent1_w&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;agent2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent1_w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我們獲得每個神經網路的fitness的方式是讓那個agent和一個target agent對打很多場，用勝率當fitness。神經網路有64個輸入，是棋盤的64個位置，白棋=1、黑棋=-1。神經網路的輸出則是作為evaluation用。在測試fitness的過程中，為了減少每一個generation的時間，神經網路搭配的agent是只搜尋1層的minimax agent。&lt;/p&gt;

&lt;p&gt;但在run generation時我們發現一個奇怪的現象，當target agent是隨機下棋的時候，第一個generation就會有勝率高達0.9的神經網路了。受限於可以使用的計算力和時間，我們只有跑200個generation，在這200個generation中，平均的勝率幾乎沒有成長，不管target agent用的是random agent或是我們已經寫好的agent。但是所剩的時間不多，沒辦法再回去看測量fitness的地方有沒有寫錯，只能先把得到的神經網路先拿來跟原本的比看看。&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;p&gt;因為Minimax做出來的agent缺乏隨機性，而且evaluation難以做到完美，考量到其他組可能不會加隨機性，我們決定測試兩種添加隨機的方法。第一種是設定前&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;步完全隨機下，第二種是每一步都有&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;的機率會隨機下。&lt;/p&gt;

&lt;p&gt;採用第一種隨機性的agent我們稱之為&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BasicMinimaxAgent&lt;/code&gt;，採用第二種的我們稱之為&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LittleRandomAgent&lt;/code&gt;。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;的值是人為評估得到的，考慮每盤棋大約會下32步，我們希望他其中一步隨機走就好，因為這一步可能是開局、中盤或尾盤，如此可以得到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p=0.03&lt;/code&gt;。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;則只是隨便選的。下面是他們兩個對上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomAgent&lt;/code&gt;的成績。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BasicMinimaxAgent&lt;/code&gt; (先手, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n=4&lt;/code&gt;) vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomAgent&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Depth&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;4&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;5&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;6&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Games&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Wins&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4404&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4689&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4841&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4921&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4954&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1993&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.881&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.938&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.968&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.984&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.991&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.997&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0046&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0034&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0025&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0018&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0014&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0013&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win% - Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.876&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.934&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.966&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.982&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.989&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.995&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win% + Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.885&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.941&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.971&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.986&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.992&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.998&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LittleRandomAgent&lt;/code&gt; (先手, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p=0.03&lt;/code&gt;) vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomAgent&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Depth&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;4&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;5&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;6&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Games&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Wins&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4446&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4640&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4818&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4889&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4951&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1990&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.889&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.928&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.964&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.978&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.990&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.995&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0044&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0037&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0026&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0021&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0014&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win% - Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.885&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.924&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.961&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.976&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.989&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.993&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win% + Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.894&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.932&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.966&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.980&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.992&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.997&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;兩者勝率差不多，但由於第二種隨機太不穩定，在實力接近時很可能會搞砸最重要的收尾，最終還是選擇第一種隨機。&lt;/p&gt;

&lt;p&gt;再來就是看NEAT能帶來多少幫助，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NEATAgent&lt;/code&gt;也添加了第一種隨機性，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;使用同樣的值。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NEATAgent&lt;/code&gt; (先手) vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomAgent&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Depth&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;4&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;5&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;6&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Games&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Wins&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4423&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4659&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4846&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4926&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4969&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1987&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.885&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.932&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.969&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.985&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.994&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.994&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0045&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0036&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0024&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0017&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0011&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.0018&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win% - Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.880&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.928&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.967&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.983&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.993&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.992&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win% + Sigma&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.889&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.935&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.972&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.987&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.995&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;.995&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;看起來和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BasicMinimaxAgent&lt;/code&gt;無太大差別。&lt;/p&gt;

&lt;p&gt;為了從兩個裡選出一個作為代表的agent，讓他們對打10000場輪流先攻，結果如下：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NEATAgent&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BasicMinimaxAgent&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;NEAT Wins&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Basic Minimax Wins&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Draw&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5002&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4784&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;214&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;看來NEAT還是稍微好一點，但沒有壓倒性的勝利。&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;最後我們繳交的是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NEATAgent&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n=2&lt;/code&gt;，將&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;降低是因為在和黑白棋遊戲的電腦測試時，發現&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n=4&lt;/code&gt;還是會不穩。從最終和全班其他31組的對戰結果看來，這次還算是成功的。在各種先後攻的組合中只有對上其中兩隊且我方先攻時勝率僅0.5x，其他都大於0.7。拿去和三、四種黑白棋遊戲的電腦玩家對打，對上最高難度幾乎都能贏。但是我覺得能加強的地方應該還有很多，用先建好的資料庫+查詢也許可以讓棋力更加強悍。&lt;/p&gt;</content><author><name>GWFrank</name><email>frankkuo@protonmail.com</email></author><category term="programming" /><category term="python" /><summary type="html">TLDR 今年(109-1)計概單班的期末專題(其實應該只算是一次作業？)是做一個黑白棋Agent，我和隊友用minimax + 神經網路做的evaluation實做，最後在31組中拿下第一名，對所有其他組都有超過0.5的勝率。這篇文章將會稍微紀錄一下開發的過程和一些心得及想法。</summary></entry></feed>